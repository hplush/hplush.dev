name: Deploy
on:
  push:
    branches:
      - main
permissions:
  contents: read
  id-token: write
env:
  PROJECT_ID: hplushdev-421120
  REGION: europe-west1
  IDENTITY: 878858292866
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Install build dependencies
        run: pnpm install --production
      - name: Compile Markdown
        run: pnpm build
      - name: Auth Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/{{ env.IDENTITY }}/locations/global/workloadIdentityPools/github/providers/slowreader
          service_account: github-deploy@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
      - name: Install Google Cloud
        uses: google-github-actions/setup-gcloud@v2
      - name: Auth Docker
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
      - name: Build Docker image
        run: docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/website/website:latest .
      - name: Push Docker image
        run: docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/website/website:latest
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy website \
            --project ${{ env.PROJECT_ID }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/website/website:latest \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --service-account github-deploy@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
      - name: Move traffic to new revision
        run: |
          gcloud run services update-traffic website \
            --project ${{ env.PROJECT_ID }} \
            --region ${{ env.REGION }} \
            --to-latest
      - name: Delete previous images
        run: |
          untagged=$(gcloud artifacts docker images list $REGION-docker.pkg.dev/$PROJECT_ID/website/website --include-tags --format="get(version)" --filter="tags = ''")
          for digest in $untagged; do
            image=$REGION-docker.pkg.dev/$PROJECT_ID/website/website@$digest
            echo "Deleting unused image: $image"
            gcloud artifacts docker images delete $image --quiet
          done
